openapi: 3.0.0
info:
  title: Negotiations API
  version: 1.0.0
  description: API for managing negotiations and their associated data

components:
  schemas:
    AddressInfo:
      type: object
      properties:
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      additionalProperties: false
    EGoodsTypes:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    Supplier:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/AddressInfo'
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
          readOnly: true
        language:
          type: string
          nullable: true
      additionalProperties: false
    Transport:
      type: object
      properties:
        id:
          type: string
          nullable: true
        supplierId:
          type: integer
          format: int32
        loadingAddress:
          $ref: '#/components/schemas/AddressInfo'
        unloadingAddress:
          $ref: '#/components/schemas/AddressInfo'
        goods:
          $ref: '#/components/schemas/EGoodsTypes'
        goodsStr:
          type: string
          nullable: true
          readOnly: true
        price:
          type: number
          format: double
        performanceScore:
          type: number
          format: double
      additionalProperties: false

    Address:
      type: object
      properties:
        city:
          type: string
        country:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
      required:
        - city
        - country
        - latitude
        - longitude

    PriceRange:
      type: object
      properties:
        start:
          type: number
          format: float
        end:
          type: number
          format: float
      required:
        - start
        - end

    ChatMessage:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        message:
          type: string
        author:
          type: string
      required:
        - timestamp
        - message

    Negotiation:
      type: object
      properties:
        id:
          type: string
        loadingAddress:
          $ref: '#/components/schemas/Address'
        unloadingAddress:
          $ref: '#/components/schemas/Address'
        priceRange:
          $ref: '#/components/schemas/PriceRange'
        status:
          type: string
          enum: [confirmed, refused, pending]
        ranking:
          type: array
          items:
            type: string
        chats:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ChatMessage'
      required:
        - id
        - loadingAddress
        - unloadingAddress
        - priceRange
        - status
        - ranking
        - chats

paths:

  /Helper/GetAvailableCities:
    get:
      tags:
        - Helper
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressInfo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressInfo'
  /Helper/GetAvailableGoodsTypes:
    get:
      tags:
        - Helper
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /Supplier/GetAllSuppliers:
    get:
      tags:
        - Supplier
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
  /Supplier/GetSupplierById/{id}:
    get:
      tags:
        - Supplier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Supplier'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
            text/json:
              schema:
                $ref: '#/components/schemas/Supplier'
  /Transport/GetTransportHistory:
    get:
      tags:
        - Transport
      parameters:
        - name: load_city
          in: query
          schema:
            type: string
        - name: unload_city
          in: query
          schema:
            type: string
        - name: country1
          in: query
          schema:
            type: string
        - name: country2
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'
  /Transport/GetTransportHistoryForSupplier/{id}:
    get:
      tags:
        - Transport
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'

  /negotiations:
    get:
      summary: Get all negotiations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Negotiation'
    
    post:
      summary: Create a new negotiation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Negotiation'
      responses:
        '201':
          description: Negotiation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Negotiation'

  /negotiations/{id}:
    get:
      summary: Get a negotiation by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Negotiation'
        '404':
          description: Negotiation not found

    put:
      summary: Update a negotiation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Negotiation'
      responses:
        '200':
          description: Negotiation updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Negotiation'
        '404':
          description: Negotiation not found

    delete:
      summary: Delete a negotiation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Negotiation deleted successfully
        '404':
          description: Negotiation not found

  /negotiations/{id}/ranking:
    get:
      summary: Get the ranking for a specific negotiation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Negotiation not found

  /negotiations/{id}/chats:
    get:
      summary: Get all chats for a specific negotiation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/ChatMessage'
        '404':
          description: Negotiation not found

  /negotiations/{id}/chats/{supplier_id}:
    get:
      summary: Get chat messages with a specific supplier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: supplier_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'
        '404':
          description: Negotiation or supplier chat not found
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MarcoLampis/SFScon24/1.0.0
